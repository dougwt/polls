// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PollNew renders properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PollNewEdit />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="container"
>
        <div
                className="row"
        >
                <h3
                        className="header section-title"
                >
                        Create a Poll
                </h3>
                <ReduxForm
                        initialValues={
                                Object {
                                        "choices": Array [
                                          0,
                                          1,
                                        ],
                                      }
                        }
                        onPollSubmit={[Function]}
                />
        </div>
</div>,
      "className": "section",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="row"
>
          <h3
                    className="header section-title"
          >
                    Create a Poll
          </h3>
          <ReduxForm
                    initialValues={
                              Object {
                                        "choices": Array [
                                          0,
                                          1,
                                        ],
                                      }
                    }
                    onPollSubmit={[Function]}
          />
</div>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3
              className="header section-title"
>
              Create a Poll
</h3>,
            <ReduxForm
              initialValues={
                            Object {
                                          "choices": Array [
                                            0,
                                            1,
                                          ],
                                        }
              }
              onPollSubmit={[Function]}
/>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create a Poll",
              "className": "header section-title",
            },
            "ref": null,
            "rendered": "Create a Poll",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "initialValues": Object {
                "choices": Array [
                  0,
                  1,
                ],
              },
              "onPollSubmit": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
>
          <div
                    className="row"
          >
                    <h3
                              className="header section-title"
                    >
                              Create a Poll
                    </h3>
                    <ReduxForm
                              initialValues={
                                        Object {
                                                  "choices": Array [
                                                    0,
                                                    1,
                                                  ],
                                                }
                              }
                              onPollSubmit={[Function]}
                    />
          </div>
</div>,
        "className": "section",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row"
>
            <h3
                        className="header section-title"
            >
                        Create a Poll
            </h3>
            <ReduxForm
                        initialValues={
                                    Object {
                                                "choices": Array [
                                                  0,
                                                  1,
                                                ],
                                              }
                        }
                        onPollSubmit={[Function]}
            />
</div>,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3
                className="header section-title"
>
                Create a Poll
</h3>,
              <ReduxForm
                initialValues={
                                Object {
                                                "choices": Array [
                                                  0,
                                                  1,
                                                ],
                                              }
                }
                onPollSubmit={[Function]}
/>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Create a Poll",
                "className": "header section-title",
              },
              "ref": null,
              "rendered": "Create a Poll",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "initialValues": Object {
                  "choices": Array [
                    0,
                    1,
                  ],
                },
                "onPollSubmit": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
