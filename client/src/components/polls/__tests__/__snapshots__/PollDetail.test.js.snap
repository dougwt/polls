// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PollDetail renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PollDetail
    disabled={false}
    formValues={
      Object {
        "choices": Array [
          0,
          1,
          undefined,
          undefined,
          undefined,
          undefined,
        ],
        "question": "Who is your favorite Starfleet captain?",
      }
    }
    votePoll={[MockFunction]}
    waiting={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Card
        className="darken-1"
        title="Who is your favorite Starfleet captain?"
      >
        <form
          className="poll"
          onSubmit={[Function]}
        >
          <div
            className="choices"
          />
          <Row
            className="center-align"
          >
            <Button
              className="teal"
              disabled={false}
              node="button"
            >
              Vote
            </Button>
          </Row>
        </form>
      </Card>,
      "className": "container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <form
          className="poll"
          onSubmit={[Function]}
        >
          <div
            className="choices"
          />
          <Row
            className="center-align"
          >
            <Button
              className="teal"
              disabled={false}
              node="button"
            >
              Vote
            </Button>
          </Row>
        </form>,
        "className": "darken-1",
        "title": "Who is your favorite Starfleet captain?",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="choices"
            />,
            <Row
              className="center-align"
            >
              <Button
                className="teal"
                disabled={false}
                node="button"
              >
                Vote
              </Button>
            </Row>,
          ],
          "className": "poll",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "className": "choices",
            },
            "ref": null,
            "rendered": Array [],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Button
                className="teal"
                disabled={false}
                node="button"
              >
                Vote
              </Button>,
              "className": "center-align",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Vote",
                "className": "teal",
                "disabled": false,
                "node": "button",
                "onClick": undefined,
              },
              "ref": null,
              "rendered": "Vote",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": "form",
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Card
          className="darken-1"
          title="Who is your favorite Starfleet captain?"
        >
          <form
            className="poll"
            onSubmit={[Function]}
          >
            <div
              className="choices"
            />
            <Row
              className="center-align"
            >
              <Button
                className="teal"
                disabled={false}
                node="button"
              >
                Vote
              </Button>
            </Row>
          </form>
        </Card>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <form
            className="poll"
            onSubmit={[Function]}
          >
            <div
              className="choices"
            />
            <Row
              className="center-align"
            >
              <Button
                className="teal"
                disabled={false}
                node="button"
              >
                Vote
              </Button>
            </Row>
          </form>,
          "className": "darken-1",
          "title": "Who is your favorite Starfleet captain?",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="choices"
              />,
              <Row
                className="center-align"
              >
                <Button
                  className="teal"
                  disabled={false}
                  node="button"
                >
                  Vote
                </Button>
              </Row>,
            ],
            "className": "poll",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [],
                "className": "choices",
              },
              "ref": null,
              "rendered": Array [],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Button
                  className="teal"
                  disabled={false}
                  node="button"
                >
                  Vote
                </Button>,
                "className": "center-align",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Vote",
                  "className": "teal",
                  "disabled": false,
                  "node": "button",
                  "onClick": undefined,
                },
                "ref": null,
                "rendered": "Vote",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": "form",
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
